/*
 * This source file is part of RmlUi, the HTML/CSS Interface Middleware
 *
 * For the latest information, see http://github.com/mikke89/RmlUi
 *
 * Copyright (c) 2008-2010 CodePoint Ltd, Shift Technology Ltd
 * Copyright (c) 2019-2023 The RmlUi Team, and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */

#ifndef RMLUI_CORE_DECORATORTILEDVERTICAL_H
#define RMLUI_CORE_DECORATORTILEDVERTICAL_H

#include "DecoratorTiled.h"

namespace Rml {

/**
    @author Peter Curry
 */

class DecoratorTiledVertical : public DecoratorTiled {
public:
	DecoratorTiledVertical();
	virtual ~DecoratorTiledVertical();

	/// Initialises the tiles for the decorator.
	/// @param[in] tiles The declaration for all three tiles.
	/// @param[in] textures The textures for the three tiles.
	/// @return True if all the tiles and textures are properly specified.
	bool Initialise(const Tile* tiles, const Texture* textures);

	/// Called on a decorator to generate any required per-element data for a newly decorated element.
	DecoratorDataHandle GenerateElementData(Element* element) const override;
	/// Called to release element data generated by this decorator.
	void ReleaseElementData(DecoratorDataHandle element_data) const override;

	/// Called to render the decorator on an element.
	void RenderElement(Element* element, DecoratorDataHandle element_data) const override;

private:
	enum { TOP = 0, BOTTOM = 1, CENTRE = 2 };

	Tile tiles[3];
};

} // namespace Rml
#endif
